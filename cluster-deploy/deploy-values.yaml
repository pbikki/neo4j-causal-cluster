# Default values for Neo4j.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

name: "neo4j"

# Specs for the Neo4j docker image
image: "neo4j"
imageTag: "3.5-enterprise"
imagePullPolicy: "IfNotPresent"
# imagePullSecret: registry-secret
acceptLicenseAgreement: "yes"
podDisruptionBudget: {}
  # minAvailable: 2
  # maxUnavailable: 1

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Use password authentication
authEnabled: true

## Specify password for neo4j user
## Defaults to a random 10-character alphanumeric string if not set and authEnabled is true
# neo4jPassword:

# Specify cluster domain (used eg. as suffix in definition of NEO4J_causal__clustering_initial__discovery__members environment variable)
clusterDomain: "cluster.local"

# Specs for the images used for running tests against the Helm package
testImage: "markhneedham/k8s-kubectl"
testImageTag: "master"

# Cores
core:
  numberOfServers: 3
  persistentVolume:
    ## whether or not persistence is enabled
    ##
    enabled: true

    ## core server data Persistent Volume mount root path
    ##
    mountPath: /data

    ## core server data Persistent Volume size
    ##
    size: 30Gi

    ## core server data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass: "ibmc-block-gold"

    ## Subdirectory of core server data Persistent Volume to mount
    ## Useful if the volume's root directory is not empty
    ##
    ## subPath: ""

  ## Pass extra environment variables to the Neo4j container.
  ##
  extraVars:
  - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
    value: "yes"
  - name: NEO4J_dbms_backup_address
    value: "0.0.0.0:6362"
  - name: NEO4J_dbms_backup_enabled
    value: "true"
  - name: NEO4J_dbms_allow__upgrade
    value: "true"

  sidecarContainers: []
  ## Additional containers to be added to the Neo4j core pod.
  #  - name: my-sidecar
  #    image: nginx:latest

  initContainers:
  # init containers to run before the Neo4j core pod e.g. to install
  # plugins or restore backups
  - name: copy-dump
    image: "xueshanf/awscli:latest"
    imagePullPolicy: "IfNotPresent"
    volumeMounts:
    - name: datadir
      mountPath: /data
    env:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          key: access_key_id
          name: cos-secret 
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          key: secret_access_key
          name: cos-secret   
    command:
      - "/bin/sh"
      - "-c"
      - |
        if [ -f /data/<dump_file_name> ]
        then
           echo 'DB dump already downloaded'
           exit 0
        else
           aws --endpoint-url=<cos-bucket-endpoint-url> s3 cp s3://<bucket-name>/<<dump_file_name> /data/<dump_file_name>
        fi
  - name: restore-db
    image: "neo4j:3.5-enterprise"
    imagePullPolicy: "IfNotPresent"
    volumeMounts:
    - name: datadir
      mountPath: /data
    command:
      - "/bin/sh"
      - "-c"
      - |
        if [ -d /data/databases/graph.db ]
        then
           echo 'DB already exists'
           exit 0
        else
           mkdir -p /data/databases/graph.db
           echo 'Starting database load...'
           neo4j-admin unbind
           neo4j-admin load --from=/data/<dump_file_name> --force=true --database=graph.db
           echo 'Restore Finished'
        fi
# Read Replicas
readReplica:
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 512Mi
  autoscaling:
    enabled: false
    targetAverageUtilization: 70
    minReplicas: 1
    maxReplicas: 3

  numberOfServers: 0
  ## Pass extra environment variables to the Neo4j container.
  ##
  # extraVars:
  # - name: EXTRA_VAR_1
  #   value: extra-var-value-1
  # - name: EXTRA_VAR_2
  #   value: extra-var-value-2

  sidecarContainers: []
  ## Additional containers to be added to the Neo4j replica pod.
  #  - name: my-sidecar
  #    image: nginx:latest

  initContainers: []
  ## init containers to run before the Neo4j replica pod e.g. to install plugins

  # - name: init-plugins
  #   image: "appropriate/curl:latest"
  #   imagePullPolicy: "IfNotPresent"
  #   volumeMounts:
  #   - name: plugins
  #     mountPath: /plugins
  #   command:
  #     - "/bin/sh"
  #     - "-c"
  #     - |
  #       curl -L https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/3.2.0.3/apoc-3.2.0.3-all.jar -O
  #       cp apoc-3.2.0.3-all.jar /plugins/

resources: {}
# limits:
#   cpu: 100m
#   memory: 512Mi
# requests:
#   cpu: 100m
#   memory: 512Mi